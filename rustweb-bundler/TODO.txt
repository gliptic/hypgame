* wasm-opt does not optimize load/store offset enough:

 000115: 20 04                      |     local.get 4
 000117: 41 dc 80 c0 00             |     i32.const 1048668
 00011c: 6a                         |     i32.add
 00011d: 20 07                      |     local.get 7
 00011f: 38 02 00                   |     f32.store 2 0

 instead of:

 000115: 20 04                      |     local.get 4
 000117: 20 07                      |     local.get 7
 000119: 38 02 dc 80 c0 00          |     f32.store 2 1048668

* rename all wasm exports and imports, including "memory"
* rename global vars in glsl
* wasm.U8/U32/etc. for memory access from js. only insert if used
* inline imported wasm globals into js if they are never assigned

General:
* How does probability distribution affect huffman tree encoding in DEFLATE?

Hyp:
* Store dependency information/side-effects for reordering and let-inlining
    (Sea of nodes?)
* Add @inline attribute for functions and maybe lets too (works like a macro)
* Add @debug sections that can be turned off in debug build
* Add "for i in A..B"

GLSL:
* Consider #define instead of function definiton if the parameters to a function are side-effect free
    * Parameter ref does not need () if the context where it's inserted has a lower precedence than the expression
* Normalize xyzw, rgba, stpq
* Integers can be passed to vecN constructors without issue
* Combine declarations into one where possible
    (Try to move declarations together)
* Names can be reused for functions when they can be disambiguated by overloading
* A vector ctor with all the same parameter values can be specified with just one parameter with that value
    * Matrices are the same, but the single value is used for the diagonal
    * Matrices are column-wise
* Vertex shaders should be able to 'use' each other so that the attributes get the same names
* Transform: { a, b, ..., return z } -> return { a, b, ..., z }
* vecN/matN(-1,-2,-3) -> -vecN/matN(1,2,3)

Js:
* Change lambdas to () => {} syntax
* Port selection operator from glsl

